@model Reporting_Assistant_New.ViewModel.FinalComments
@{
    ViewBag.Title = "FinalCDetailsEdit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPageForAdmin.cshtml";
}

<h2>FinalCDetailsEdit</h2>

<script src="~/JS/MyHeader.js"></script>
<style>
#DOFC{
        width:4000px;
        height:40px;
        border:solid;
        border-color:lightgray
    }
</style>
@*@using (Html.BeginForm("UserDetailsEdit", "UserDetails", new { area = "Administrator" }, FormMethod.Post, new { encrypt = "multipart/form-data" }))*@
<form action="/FinaComment/FinalCDetailsEdit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="row col-lg-12 col-sm-12 col-md-12">

        <div class="form-group col-md-4 col-lg-4 col-sm-4">
            @Html.LabelFor(m => m.UserId)
            @*@Html.TextBoxFor(m => m.UserId, new { placeholder = "Username", @class = "form-control" })*@
            @Html.DropDownListFor(m => m.UserId, new SelectList(ViewBag.user_data, "Value", "Text"), "---select---", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserId)
        </div>
        <div class="form-group col-md-4 col-lg-4 col-sm-4">
            @Html.Label("Date Of Final Comment")<br />
            @Html.EditorFor(m => m.DOFC, "{0:d}", new { id = "DOFC", placeholder = "Date Of Final Comment", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DOFC)
        </div>
        <div class="form-group col-md-4 col-lg-4 col-sm-4">
            @Html.Label("Assigned By Admin")
            @Html.DropDownListFor(m => m.AdminUserId, new SelectList(ViewBag.Admin_data, "Value", "Text"), "---select---", new { @class = "form-control"})
            @Html.ValidationMessageFor(m => m.AdminUserId)
        </div>
    </div>
    <div class="row col-lg-12 col-sm-12 col-md-12" >
        <div class="form-group col-md-4 col-lg-4 col-sm-4">
            @Html.LabelFor(m => m.Description)
            @Html.TextBoxFor(m => m.Description, new { placeholder = "Enter Description", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Description)
        </div>

        <div class="form-group col-md-4 col-lg-4 col-sm-4">
            @Html.LabelFor(m => m.ProjectId)
            @Html.TextBoxFor(m => m.ProjectId, new { placeholder = "Enter Product Id", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ProjectId)
        </div>
        <div class="form-group col-md-4 col-lg-4 col-sm-4">
            @Html.LabelFor(m => m.Screen)
            @Html.TextBoxFor(m => m.Screen, new { placeholder = "Enter Screen Details", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Screen)
        </div>
    </div>

        @*<div class="form-group col-md-4">
            @Html.LabelFor(m => m.ImageAttached)
            @Html.TextBoxFor(m => m.ImageAttached, new { placeholder = "Country", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Country)*@
        @*</div>*@
    <div class="row">
        <div class="form-group">
            @if(Model.ImageAttached!=null)
            { 
                <img style="max-height:100px; max-width:100px; padding-left:10px" src="@Url.Content(@Model.ImageAttached !=null? @Model.ImageAttached: "" )" alt="">
                <br />
            }
            <br />
            <label for="image">Image</label>
            <input type="file" class="form-control-file" id="image" name="ImageAttached" />
        </div>
        <button type="submit" class="btn btn-success">Submit</button>
        </div>
        @Html.ValidationSummary()
@Html.Raw(TempData["Message"])
    </div>

</form>








